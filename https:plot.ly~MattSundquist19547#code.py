# Get this figure: fig = py.get_figure("https://plot.ly/~MattSundquist/19547/")
# Get this figure's data: data = py.get_figure("https://plot.ly/~MattSundquist/19547/").get_data()
# Add data to this figure: py.plot(Data([Scatter(x=[1, 2], y=[2, 3])]), filename ="histogram-mpl-legend", fileopt="extend")
# Get y data of first trace: y1 = py.get_figure("https://plot.ly/~MattSundquist/19547/").get_data()[0]["y"]

# Get figure documentation: https://plot.ly/python/get-requests/
# Add data documentation: https://plot.ly/python/file-options/

# If you're using unicode in your file, you may need to specify the encoding.
# You can reproduce this figure in Python with the following code!

# Learn about API authentication here: https://plot.ly/python/getting-started
# Find your api_key here: https://plot.ly/settings/api

import plotly.plotly as py
from plotly.graph_objs import *
py.sign_in('username', 'api_key')
trace1 = {
  "x": [43.8557292123, 46.1952554823, 48.5347817523, 50.8743080222, 53.2138342922, 55.5533605622, 57.8928868322, 60.2324131022, 62.5719393722, 64.9114656422, 67.2509919122, 69.5905181822, 71.9300444522, 74.2695707222, 76.6090969922, 78.9486232622, 81.2881495322, 83.6276758022, 85.9672020722, 88.3067283422, 90.6462546122, 92.9857808822, 95.3253071522, 97.6648334222, 100.004359692, 102.343885962, 104.683412232, 107.022938502, 109.362464772, 111.701991042, 114.041517312, 116.381043582, 118.720569852, 121.060096122, 123.399622392, 125.739148662, 128.078674932, 130.418201202, 132.757727472, 135.097253742, 137.436780012, 139.776306282, 142.115832552, 144.455358822, 146.794885092, 149.134411362, 151.473937632, 153.813463902, 156.152990172, 158.492516442, 160.832042712], 
  "y": [2.41353913794e-05, 4.27469743669e-05, 7.38910272419e-05, 0.000124656037047, 0.000205243880112, 0.000329808925813, 0.000517237354935, 0.00079168542141, 0.00118263492865, 0.00172418572012, 0.00245331138721, 0.00340687809422, 0.00461738195522, 0.0061075959349, 0.00788460755401, 0.00993402284911, 0.0122153387689, 0.0146595677664, 0.0171700714927, 0.0196271991869, 0.0218967593198, 0.0238416686615, 0.0253354568429, 0.0262758104278, 0.0265961509034, 0.0262734282857, 0.0253308632702, 0.0238351848545, 0.021888819835, 0.0196183038759, 0.0171607338668, 0.0146502671307, 0.0122064821237, 0.00992592029903, 0.0078774623529, 0.00610150789242, 0.00461236116524, 0.00340286503776, 0.00245019941041, 0.00172184250986, 0.00118092062812, 0.000790466156258, 0.000516393943863, 0.000329241285495, 0.000204872055821, 0.000124418926716, 7.37437917301e-05, 4.26579289193e-05, 2.40829318474e-05, 1.3269490122e-05, 7.13566417564e-06], 
  "line": {
    "color": "#FF0000", 
    "dash": "dash", 
    "width": 1.0
  }, 
  "mode": "lines", 
  "name": "_line0", 
  "type": "scatter", 
  "xaxis": "x1", 
  "yaxis": "y1"
}
trace2 = {
  "x": [45.0254923473, 47.3650186173, 49.7045448873, 52.0440711572, 54.3835974272, 56.7231236972, 59.0626499672, 61.4021762372, 63.7417025072, 66.0812287772, 68.4207550472, 70.7602813172, 73.0998075872, 75.4393338572, 77.7788601272, 80.1183863972, 82.4579126672, 84.7974389372, 87.1369652072, 89.4764914772, 91.8160177472, 94.1555440172, 96.4950702872, 98.8345965572, 101.174122827, 103.513649097, 105.853175367, 108.192701637, 110.532227907, 112.871754177, 115.211280447, 117.550806717, 119.890332987, 122.229859257, 124.569385527, 126.908911797, 129.248438067, 131.587964337, 133.927490607, 136.267016877, 138.606543147, 140.946069417, 143.285595687, 145.625121957, 147.964648227, 150.304174497, 152.643700767, 154.983227037, 157.322753307, 159.662279577], 
  "y": [8.54873922831e-05, 4.27436961416e-05, 4.27436961416e-05, 0.000170974784566, 0.000299205872991, 0.00055566804984, 0.000641155442123, 0.0010258487074, 0.00158151675724, 0.00158151675724, 0.00320577721062, 0.00346223938747, 0.00495826875242, 0.00632606702895, 0.00799307117847, 0.010258487074, 0.0133787768923, 0.0152594995225, 0.0174394280258, 0.0205169741479, 0.0230815959164, 0.0246631126737, 0.0263301168232, 0.0291084570724, 0.0253897555081, 0.0268430411769, 0.0262873731271, 0.0241074446238, 0.0197475876174, 0.0184652767332, 0.0161998608377, 0.0137634701576, 0.0111988483891, 0.00837776444375, 0.00598411745982, 0.00602686115596, 0.00397516374117, 0.00265010916078, 0.00183797893409, 0.00183797893409, 0.00119682349196, 0.000512924353699, 0.000384693265274, 0.000256462176849, 0.000170974784566, 8.54873922831e-05, 4.27436961416e-05, 4.27436961416e-05, 0.0, 4.27436961416e-05], 
  "marker": {
    "color": "#008000", 
    "line": {"width": 1.0}
  }, 
  "opacity": 0.5, 
  "orientation": "v", 
  "type": "bar", 
  "xaxis": "x1", 
  "yaxis": "y1"
}
data = Data([trace1, trace2])
layout = {
  "bargap": 7.1054273576e-15, 
  "hovermode": "closest", 
  "showlegend": False, 
  "xaxis1": {
    "anchor": "y1", 
    "domain": [0.0, 1.0], 
    "mirror": "ticks", 
    "nticks": 8, 
    "range": [40.0, 180.0], 
    "showgrid": False, 
    "showline": True, 
    "side": "bottom", 
    "tickfont": {"size": 12.0}, 
    "ticks": "inside", 
    "title": "Smarts", 
    "titlefont": {
      "color": "#000000", 
      "size": 12.0
    }, 
    "type": "linear", 
    "zeroline": False
  }, 
  "yaxis1": {
    "anchor": "x1", 
    "domain": [0.0, 1.0], 
    "mirror": "ticks", 
    "nticks": 7, 
    "range": [0.0, 0.03], 
    "showgrid": False, 
    "showline": True, 
    "side": "left", 
    "tickfont": {"size": 12.0}, 
    "ticks": "inside", 
    "title": "Probability", 
    "titlefont": {
      "color": "#000000", 
      "size": 12.0
    }, 
    "type": "linear", 
    "zeroline": False
  }
}
fig = Figure(data=data, layout=layout)
plot_url = py.plot(fig)